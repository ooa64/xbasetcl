# makefile.vc for nmake
#
# Possible uses are:
#
# nmake -nologo -f makefile.vc [USE_TCL_STUBS=1] [STATIC_BUILD=1] [DEBUG=1]
#
# Xbase files required:
#
# $(XBASESRC)\xbase\makerules.vc  - common defines
# $(XBASESRC)\xbase\xbase.h       - header
# $(XBASESRC)\xbase\xbaseXXs.lib    - static lib
# $(XBASESRC)\xbase\xbaseXXsd.lib   - static debug lib
#

### Defaults

!ifndef XBASESRC
XBASESRC = ..\xbase
!endif

!include "$(XBASESRC)\makerules.vc"

!ifndef XBASEVERSION
XBASEVERSION = 21
!endif

!ifndef XBASESTATIC
XBASESTATIC = 1
!endif

!ifndef TCLROOT
TCLROOT	 = c:\progra~1\tcl
!endif

!ifndef TCLVERSION
TCLVERSION = 83
!endif

!ifndef USE_TCL_STUBS
!if "$(TCLVERSION)" == "80"
USE_TCL_STUBS = 0
!else
USE_TCL_STUBS = 1
!endif
!endif

!ifndef THREADS
THREADS = 1
!endif

!if "$(THREADS)" == "1"
TCL_DBGX = t
!endif

### Defines

NAMEPREFIX = xbasetcl
VERSION = 10
SHELL = $(NAMEPREFIX)sh$(VERSION)$(TCL_DBGX).exe
NAME = $(NAMEPREFIX)$(VERSION)$(TCL_DBGX)
LIB = $(NAME).lib

TCLLIB = tcl$(TCLVERSION)$(TCL_DBGX).lib

DEFINES = $(DEFINES) $(CFLAGS) -I"$(TCLROOT)\include" -I"$(XBASESRC)"
LIBS = $(LIBS) -libpath:"$(XBASESRC)\xbase" -libpath:"$(TCLROOT)\lib"
LIBS = $(LIBS) msvcrt$(DBGX).lib msvcprt$(DBGX).lib

!if "$(DEBUG)" == "1"
#DEFINES = $(DEFINES) -DTCLCMD_DEBUG
DEFINES = $(DEFINES) -DTCLDBF_DEBUG
DEFINES = $(DEFINES) -DXBASE_DEBUG 
DEFINES = $(DEFINES) -DTCL_DEBUG=1
DEFINES = $(DEFINES) -DTCL_MEM_DEBUG=1
TCL_DBGX = tg
!endif

!if "$(THREADS)" == "1"
DEFINES = $(DEFINES) -DTCL_THREADS=1 -DUSE_THREAD_ALLOC=1
!endif

!if "$(STATIC_BUILD)" == "1"
DEFINES	= $(DEFINES) -DSTATIC_BUILD
TCL_DBGX = stg
!endif

!if "$(XBASESTATIC)" == "1"
LIBS = $(LIBS) xbase$(XBASEVERSION)s$(DBGX).lib
!else
DEFINES = $(DEFINES) -DXBUSINGDLL
LIBS = $(LIBS) xbase$(XBASEVERSION)$(DBGX).lib
!endif

!if $(USE_TCL_STUBS) == 1
DEFINES	= $(DEFINES) -DUSE_TCL_STUBS=1
#LIBS	= $(LIBS) tclstub$(TCLVERSION)$(DBGX).lib
LIBS	= $(LIBS) tclstub$(TCLVERSION).lib $(TCLLIB)
!else
LIBS	= $(LIBS) $(TCLLIB)
!endif

OBJS = \
	xbasetcl.obj \
	tclcmd.obj \
	tclxbase.obj \
	tcldbf.obj \
	tclindex.obj \
	tclfilter.obj

SHELL_OBJS = xbaseAppInit.obj tclAppInit.obj

# Rules

all : $(LIB)

shell: $(SHELL)

clean :
	-del *.obj
	-del *.idb
	-del *.ilk
	-del *.pch
	-del *.pdb
	-del $(LIB)
	-del $(SHELL)
	-del $(NAME).dll
	-del $(NAME).exp

!if "$(STATIC_BUILD)" == "1"

test : all shell
	$(SHELL) xbasetcl.test

$(LIB): $(OBJS)
    $(lib32) -out:$@ $(OBJS)

!else

test : all
	set XBASEDLL=.\$(NAME).dll
	$(TCLROOT)\bin\tclsh$(TCLVERSION)$(TCL_DBGX) xbasetcl.test

$(LIB): $(NAME).dll
$(NAME).dll: $(OBJS)
    $(link32) $(ldebug) $(dlllflags) -out:$@ $(conlibsdll) $(LIBS) $(OBJS)

!endif

$(SHELL): $(OBJs) $(SHELL_OBJS) tclsh.res
	link -nologo $(ldebug) $(lflags) -out:$@ $(conlibsdll) $(LIBS) $(SHELL_OBJS) $(OBJS) tclsh.res 

tclAppInit.obj: tclAppInit.c 
	cl -nologo -c -EHsc $(DEFINES) $(CFLAGS) /DTCL_LOCAL_APPINIT=Xbasetcl_AppInit -Fo$@ $?

xbaseAppInit.obj: xbaseAppInit.c 
	cl -nologo -c -EHsc $(DEFINES) $(CFLAGS) -Fo$@ $?

.rc.res:
        rc -fo $@ -r -i $(DEFINES) $<

